//convert infix expression to postfix expression
#include<stdio.h>

#include<stdlib.h>

char stack[60]; //declaring the stack size
int top = -1; //declaring the initial value of top is -1
void push(char x)  //push function
{  
  stack[++top] = x;
}
char pop()  // pop function
{
  if (top == -1)
    return -1;
  else
    return stack[top--];
}
int priority(char x)  //priority function
{
  if (x == '(')
    return 0;
  if (x == '+' || x == '-')
    return 1;
  if (x == '*' || x == '/')
    return 2;
}
int main()  // main function
{
  char exp[20];
  char * e, x;
  printf("Enter the expression\n");
  scanf("%s", exp);
  e = exp;  //initiliazing the value of e to the exp
  while ( * e != '\0') {
    if (isalnum( * e))
      printf("%c", * e);
    else
    if ( * e == 'c')
      push( * e);
    else if ( * e == ')') {
      while ((x = pop()) != ')')
        printf("%c", x);
    } else {
      while (priority(stack[top]) >= priority( * e))
        printf("%c", pop());
      push( * e);
    }
    e++; //incrementation of e by 1
  }
  while (top != -1) {
    printf("%c", pop());
  }
  return 0; //terminates the program
  printf("\n");
}
