//Implementation of queue using linked lists
#include<stdio.h>
#include<stdlib.h>
struct node	// creating a node
{
    int data;
    struct node *next;
};
struct node *front;
struct node *rear;
void insert();
void delete();
void display();
void main()
{
    int choice;
    while(choice!=4)
    {
     printf("Operations performed by queue\n");
     printf("\n1.insert\n2.delete\n3.display\n4.exit\n");
     printf("Enter your choice\n");
     scanf("%d", &choice);
     switch(choice)
      {
        case 1: insert();
        break;
        case 2: delete();
        break;
        case 3: display();
        break;
        case 4: exit(0);
        break;
        default: printf("\nInvalid choice\n");
      }
    }
}
void insert() 	// function to insert element into queue
{
    struct node *ptr;
    int item;
    ptr=(struct node *)malloc(sizeof(struct node));
    if(ptr==NULL)	//checking if queue is full
    {
     printf("Overflow\n");
     return;
    }
    else
    {
     printf("Enter value: \n");
     scanf("%d", &item);
     ptr->data=item;
     if(front==NULL)
     {
      front=ptr;
      rear=ptr;
      front->next=NULL;
      rear->next=NULL;
     }
     else
     {
      rear->next=ptr;
      rear=ptr;
      rear->next=NULL;
     } 
    }
}
void delete() 		//function to delete the first element of the queue
{
    struct node *ptr;
    if(front==NULL) 	//checking if queue is empty
    {
     printf("Underflow\n");
     return;
    }
    else
    {
     ptr=front;
     front=front->next;
     free(ptr);
    }
}
void display()
{
    struct node *ptr;
    ptr=front;
    if(front==NULL)
    {
     printf("Empty queue");
    }
    else
    {
     printf("Printing values:  \n");
     while(ptr!=NULL)
     {   
      printf("%d\n", ptr->data);
      ptr=ptr->next;
     }
    }
}
