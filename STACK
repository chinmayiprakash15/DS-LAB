/*Implementation of stack using array*/ #include<stdio.h>

#include<stdlib.h>

#define size 4 //initializing the array size to 2
int top = -1, inp_arr[size]; //initializing top value to -1
/*Function declarations*/
void push();
void pop();
void show();
int main() {
  int choice;
  while (1) {
    printf("operation performed by stack\n");
    printf("1.push\n");
    printf("2.pop\n");
    printf("3.show\n");
    printf("4.exit\n");
    printf("enter choice\n");
    scanf("%d", & choice);
    switch (choice) {
    case 1:
      push();
      break;
    case 2:
      pop();
      break;
    case 3:
      show();
      break;
    case 4:
      exit(0);
    default:
      printf("invalid choice\n");
    }
  }
}
/*push operation function*/
void push() {
  int x; //declaring the x
  if (top == size - 1) {
    printf("overflow\n");
  } else {
    printf("enter the elements to be inserted");
    scanf("%d", & x);
    top = top + 1; /*Push the elements in the array, increment the value of top*/
    inp_arr[top] = x;
  }
}
/*pop operation function*/
void pop() {
  if (top == -1) {
    printf("underflow\n");
  } else {
    printf("enter the element to be removed %d ", inp_arr[top]);
    top = top - 1;
  }
}
/*Show the operations*/
void show() {
  if (top == -1)
    printf("underflow\n");
  else
    printf("element present in stack");
  int i;
  for (i = top; i >= 0; i--) {
    printf("%d\n", inp_arr[i]);
  }
}
